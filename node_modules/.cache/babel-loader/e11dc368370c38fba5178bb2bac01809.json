{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\hackernm\\\\Desktop\\\\ngo\\\\ngosite\\\\src\\\\containers\\\\Layouts\\\\Gridlist.js\";\nimport React from 'react';\nimport PropTypes from 'prop-types';\nimport { withStyles } from '@material-ui/core/styles';\nimport GridList from '@material-ui/core/GridList';\nimport GridListTile from '@material-ui/core/GridListTile';\nimport GridListTileBar from '@material-ui/core/GridListTileBar';\nimport IconButton from '@material-ui/core/IconButton';\nimport StarBorderIcon from '@material-ui/icons/StarBorder';\n\nvar styles = function styles(theme) {\n  return {\n    root: {\n      display: 'flex',\n      flexWrap: 'wrap',\n      justifyContent: 'space-around',\n      overflow: 'hidden',\n      backgroundColor: theme.palette.background.paper\n    },\n    gridList: {\n      flexWrap: 'nowrap',\n      // Promote the list into his own layer on Chrome. This cost memory but helps keeping high FPS.\n      transform: 'translateZ(0)'\n    },\n    title: {\n      color: theme.palette.primary.light\n    },\n    titleBar: {\n      background: 'linear-gradient(to top, rgba(0,0,0,0.7) 0%, rgba(0,0,0,0.3) 70%, rgba(0,0,0,0) 100%)'\n    }\n  };\n};\n\nvar tileData = [{\n  img: './images/test.jpg',\n  title: 'volunteer',\n  author: 'author',\n  cols: 2\n}, {\n  img: require('./images/itsector.jpg'),\n  title: 'itsector',\n  author: 'abhi'\n}];\n\nfunction SingleLineGridList(props) {\n  var classes = props.classes;\n  return React.createElement(\"div\", {\n    className: classes.root,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 59\n    },\n    __self: this\n  }, React.createElement(GridList, {\n    className: classes.gridList,\n    cols: 2.5,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 60\n    },\n    __self: this\n  }, tileData.map(function (tile) {\n    return React.createElement(GridListTile, {\n      key: tile.img,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 62\n      },\n      __self: this\n    }, React.createElement(\"img\", {\n      src: tile.img,\n      alt: tile.title,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 63\n      },\n      __self: this\n    }), React.createElement(GridListTileBar, {\n      title: tile.title,\n      classes: {\n        root: classes.titleBar,\n        title: classes.title\n      },\n      actionIcon: React.createElement(IconButton, {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 71\n        },\n        __self: this\n      }, React.createElement(StarBorderIcon, {\n        className: classes.title,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 72\n        },\n        __self: this\n      })),\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 64\n      },\n      __self: this\n    }));\n  })));\n}\n\nSingleLineGridList.propTypes = {\n  classes: PropTypes.object.isRequired\n};\nexport default withStyles(styles)(SingleLineGridList);","map":{"version":3,"sources":["C:\\Users\\hackernm\\Desktop\\ngo\\ngosite\\src\\containers\\Layouts\\Gridlist.js"],"names":["React","PropTypes","withStyles","GridList","GridListTile","GridListTileBar","IconButton","StarBorderIcon","styles","theme","root","display","flexWrap","justifyContent","overflow","backgroundColor","palette","background","paper","gridList","transform","title","color","primary","light","titleBar","tileData","img","author","cols","require","SingleLineGridList","props","classes","map","tile","propTypes","object","isRequired"],"mappings":"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","sourcesContent":["import React from 'react';\r\nimport PropTypes from 'prop-types';\r\nimport { withStyles } from '@material-ui/core/styles';\r\nimport GridList from '@material-ui/core/GridList';\r\nimport GridListTile from '@material-ui/core/GridListTile';\r\nimport GridListTileBar from '@material-ui/core/GridListTileBar';\r\nimport IconButton from '@material-ui/core/IconButton';\r\nimport StarBorderIcon from '@material-ui/icons/StarBorder';\r\n\r\n\r\nconst styles = theme => ({\r\n  root: {\r\n    display: 'flex',\r\n    flexWrap: 'wrap',\r\n    justifyContent: 'space-around',\r\n    overflow: 'hidden',\r\n    backgroundColor: theme.palette.background.paper,\r\n  },\r\n  gridList: {\r\n    flexWrap: 'nowrap',\r\n    // Promote the list into his own layer on Chrome. This cost memory but helps keeping high FPS.\r\n    transform: 'translateZ(0)',\r\n  },\r\n  title: {\r\n    color: theme.palette.primary.light,\r\n  },\r\n  titleBar: {\r\n    background:\r\n      'linear-gradient(to top, rgba(0,0,0,0.7) 0%, rgba(0,0,0,0.3) 70%, rgba(0,0,0,0) 100%)',\r\n  },\r\n});\r\n\r\n\r\n \r\n \r\n  \r\n  \r\n \r\n  const tileData = [\r\n    {\r\n      img: './images/test.jpg',\r\n      title: 'volunteer',\r\n      author: 'author',\r\n      cols:2,\r\n      \r\n    },\r\n    {\r\n      img : require('./images/itsector.jpg'),\r\n      title: 'itsector',\r\n      author: 'abhi',\r\n\r\n    },\r\n  ];\r\n \r\nfunction SingleLineGridList(props) {\r\n  const { classes } = props;\r\n\r\n  return (\r\n    <div className={classes.root}>\r\n      <GridList className={classes.gridList} cols={2.5}>\r\n        {tileData.map(tile => (\r\n          <GridListTile key={tile.img}>\r\n            <img src={tile.img} alt={tile.title} />\r\n            <GridListTileBar\r\n              title={tile.title}\r\n              classes={{\r\n                root: classes.titleBar,\r\n                title: classes.title,\r\n              }}\r\n              actionIcon={\r\n                <IconButton>\r\n                  <StarBorderIcon className={classes.title} />\r\n                </IconButton>\r\n              }\r\n            />\r\n          </GridListTile>\r\n        ))}\r\n      </GridList>\r\n    </div>\r\n  );\r\n}\r\n\r\nSingleLineGridList.propTypes = {\r\n  classes: PropTypes.object.isRequired,\r\n};\r\n\r\nexport default withStyles(styles)(SingleLineGridList);"]},"metadata":{},"sourceType":"module"}